// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApbdContext))]
    [Migration("20250604112935_ChangedSurnamesOfClients")]
    partial class ChangedSurnamesOfClients
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("ID");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstName = "CJohn",
                            LastName = "Doe1"
                        },
                        new
                        {
                            ID = 2,
                            FirstName = "CJane",
                            LastName = "Doe2"
                        },
                        new
                        {
                            ID = 3,
                            FirstName = "CJohn",
                            LastName = "Doe3"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("ID");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstName = "EJohn",
                            LastName = "Doe"
                        },
                        new
                        {
                            ID = 2,
                            FirstName = "EJane",
                            LastName = "Doe"
                        },
                        new
                        {
                            ID = 3,
                            FirstName = "EJohn",
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("AcceptedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FulfilledAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AcceptedAt = new DateTime(2024, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 1,
                            Comments = "CommentA",
                            EmployeeID = 2,
                            FulfilledAt = new DateTime(2024, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            AcceptedAt = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 2,
                            Comments = "CommentB",
                            EmployeeID = 1,
                            FulfilledAt = new DateTime(2024, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            AcceptedAt = new DateTime(2024, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 3,
                            Comments = "CommentC",
                            EmployeeID = 2,
                            FulfilledAt = new DateTime(2024, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            AcceptedAt = new DateTime(2024, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 1,
                            Comments = "CommentD",
                            EmployeeID = 3,
                            FulfilledAt = new DateTime(2024, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Order_Pastry", b =>
                {
                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("PastryID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("OrderID", "PastryID");

                    b.HasIndex("PastryID");

                    b.ToTable("Order_Pastry");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            PastryID = 1,
                            Amount = 4,
                            Comments = "Comment A"
                        },
                        new
                        {
                            OrderID = 1,
                            PastryID = 3,
                            Amount = 2,
                            Comments = "Comment B"
                        },
                        new
                        {
                            OrderID = 2,
                            PastryID = 2,
                            Amount = 5
                        },
                        new
                        {
                            OrderID = 3,
                            PastryID = 1,
                            Amount = 1
                        },
                        new
                        {
                            OrderID = 4,
                            PastryID = 1,
                            Amount = 5
                        },
                        new
                        {
                            OrderID = 4,
                            PastryID = 2,
                            Amount = 2
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Pastry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("Pastry");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Pastry A",
                            Price = 0.99m,
                            Type = "TypeA"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Pastry B",
                            Price = 1.59m,
                            Type = "TypeB"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Pastry C",
                            Price = 6.91m,
                            Type = "TypeC"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Order", b =>
                {
                    b.HasOne("WebApplication1.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebApplication1.Models.Order_Pastry", b =>
                {
                    b.HasOne("WebApplication1.Models.Order", "Order")
                        .WithMany("PastryOrders")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Pastry", "Pastry")
                        .WithMany("PastryOrders")
                        .HasForeignKey("PastryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Pastry");
                });

            modelBuilder.Entity("WebApplication1.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebApplication1.Models.Order", b =>
                {
                    b.Navigation("PastryOrders");
                });

            modelBuilder.Entity("WebApplication1.Models.Pastry", b =>
                {
                    b.Navigation("PastryOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
